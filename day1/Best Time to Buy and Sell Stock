#include<math.h>
class Solution {

public:
    int maxProfit(vector<int>& prices) {
        // Brute Force
//         int ans = 0;
//         int profit = 0;
        
//         for(int i = 0; i < price.size(); i++){
//             int maximum = INT_MIN;
//             for(int j = i+1; j < prices.size(); j++){
//                 maximum = max(maximum, prices[i]);
//             }
            
//             profit = maximum - prices[i];
//             ans = max(ans, profit);
//         }
//         return ans;
        
//         // Approach-> 1
//         int minSoFar = prices[0];
//         int maxSoFar = 0;
        
//         for(int i = 1; i < prices.size(); i++){
//             minSoFar = min(minSoFar, prices[i]);
//             int profit = prices[i] - minSoFar;
//             maxSoFar = max(maxSoFar, profit);
//         }
        
//         return maxSoFar;
        
       // Approach -> 2;
        int buy = prices[0];
        int maxProfit = 0;
        
        for(int i = 1; i < prices.size(); i++){
            int sell = prices[i];
            int profit = sell - buy;
            if(profit < 0){
                buy = sell;
            }
            maxProfit = max(maxProfit, profit);
        }
        
        return maxProfit;
        
};
