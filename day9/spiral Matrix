class Solution {
public:
    
vector<int> spiralOrder(vector<vector<int>>& matrix){
    vector<int> result;
    
    
    int row = matrix.size();
    int col = matrix[0].size();
    
    int startingRow = 0, startingCol = 0, endingRow = row-1, endingCol = col-1;
    int count = 0, total = row*col;
    
   while(count < total){
       //from left to right
       for(int i = startingCol; count < total && i <= endingCol; i++){
           result.push_back(matrix[startingRow][i]);
           count++;
       }
       startingRow++;
       // from top to bottom
       for(int i = startingRow; count < total && i <= endingRow; i++){
           result.push_back(matrix[i][endingCol]);
           count++;
       }
       endingCol--;
       // from right to left
       for(int i = endingCol; count < total && i >= startingCol; i--){
           result.push_back(matrix[endingRow][i]);
           count++;
       }
       endingRow--;
       // from bottom to top
       for(int i = endingRow; count < total && i >= startingRow; i--){
           result.push_back(matrix[i][startingCol]);
           count++;
       }
       startingCol++;
   }
    return result;
}
};
