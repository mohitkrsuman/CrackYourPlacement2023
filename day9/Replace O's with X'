void dfs(int i, int j, vector<vector<char>>& ans, vector<vector<int>>& vis, 
    int delrow[], int delcol[], int n, int m) {
    vis[i][j] = 1;
    for (int ind = 0; ind < 4; ind++) {
        int nrow = i + delrow[ind];
        int ncol = j + delcol[ind];
        if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && ans[nrow][ncol] == 'O' && vis[nrow][ncol] != 1) {
            dfs(nrow, ncol, ans, vis, delrow, delcol, n, m);
        }
    }
}

vector<vector<char>> fill(int n, int m, vector<vector<char>> mat) {
    vector<vector<char>> ans = mat;
    vector<vector<int>> vis(n, vector<int>(m, 0));
    int delrow[] = {-1, 0, 1, 0};
    int delcol[] = {0, 1, 0, -1};

    for (int i = 0; i < n; i++) {
        if (ans[i][0] == 'O' && vis[i][0] != 1) {
            dfs(i, 0, ans, vis, delrow, delcol, n, m);
        }
        if (ans[i][m-1] == 'O' && vis[i][m-1] != 1) {
            dfs(i, m-1, ans, vis, delrow, delcol, n, m);
        }
    }

    for (int j = 1; j < m - 1; j++) {
        if (ans[0][j] == 'O' && vis[0][j] != 1) {
            dfs(0, j, ans, vis, delrow, delcol, n, m);
        }
        if (ans[n-1][j] == 'O' && vis[n-1][j] != 1) {
            dfs(n-1, j, ans, vis, delrow, delcol, n, m);
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (ans[i][j] == 'O' && vis[i][j] != 1) {
                ans[i][j] = 'X';
            }
        }
    }

    return ans;
}
