    vector<int> productExceptSelf(vector<int>& nums) {

        int n = nums.size();
        vector<int> fromBegin(n), fromLast(n);
        fromBegin[0] = 1;
        fromLast[0] = 1;
        
        for(int i = 1; i < n; i++){
            fromBegin[i] = fromBegin[i-1]*nums[i-1];
            fromLast[i] = fromLast[i-1]*nums[n-i];
        }
        vector<int> res(n);
        for(int i = 0; i < n; i++){
            res[i] = fromBegin[i]*fromLast[n-1-i];
        }
        return res;
        
        /*
          Dry Run 
          fromBegin :- 1, 1, 2, 6
          fromLast :- 1, 4, 12, 24
                       24, 12, 4, 1
                o/p :- 24, 12, 8, 6
        */
    }
