class Solution {
public:
    string removeDuplicates(string s, int k) {
        int n = s.length();
        stack<pair<char, int>> st;
        int cnt = 1;
        
        for(int i = 0; i < n; i++){
            if(st.empty() || st.top().first != s[i]){
                st.push({s[i], 1});
            }else{
                // delete prev so that its update freq will store
                auto prev = st.top();
                st.pop();
                st.push({s[i], prev.second+1});
            }
            
            if(st.top().second == k) st.pop();
        }
        
        string ans = "";
        while(!st.empty()){
            auto curr = st.top();
            st.pop();
            //we have to include chars whose freq is less than k
            while(curr.second--){
                ans.push_back(curr.first);
            }
        }
        reverse(ans.begin(), ans.end());
        
        return ans;
        
    }
    
};


/*
1) Create a stack and update the freq if the freq reaches to k pop the elem


*/
