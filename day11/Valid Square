class Solution {
private:
    int d(vector<int> &p1, vector<int> &p2){
        return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]);
    }
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        vector<int> s={d(p1,p2),d(p1,p3),d(p1,p4),d(p2,p3),d(p2,p4),d(p3,p4)};
        sort(s.begin(),s.end());
        // s4 ,s5 are diagonal, s[3] >= s[4] it means side bigger than diagonal
        if(s[0]==0||s[0]!=s[3]||s[3]>=s[4]||s[4]!=s[5]) return false;
        return true;

    }
};
