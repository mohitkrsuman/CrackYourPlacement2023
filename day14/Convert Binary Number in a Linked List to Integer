/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
 private:
    long long int binaryToDecimal(long long int n){
        int ans = 0, num = 0;
        
        while(n != 0){
            int rem = n%10;
            ans += rem*pow(2, num);
            num++;
            n/=10;
        }
        return ans;
        
    }
public:
    int getDecimalValue(ListNode* head) {
//         long long int decimal = 0, count = 0;
        
//         ListNode *temp = head;
//         while(temp != NULL){
//             count++;
//             temp = temp->next;
//         }
        
//         count -= 1;
        
//         while(head != NULL){
//             decimal += head->val*pow(10, count);
//             count--;
//             head = head->next;
//         }
        
//         return binaryToDecimal(decimal);
        int res=0;
        while(head!=NULL){
            res=res*2+head->val;
            head=head->next;
        }
        return res;

    }
};
