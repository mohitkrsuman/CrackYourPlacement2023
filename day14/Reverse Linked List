/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        // iterativerly
/*        ListNode* curr = head, *nextNode, *prev = NULL;
        
        while(curr){
            nextNode = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nextNode;
        }
        
        return prev;
*/
        // Revursively
        if(head == NULL || head->next == NULL){
            return head;
        }
        
        ListNode *newNode = reverseList(head->next);
        ListNode *headNext = head->next;
        headNext->next = head;
        head->next = NULL;
        
        return newNode;
    }
};
