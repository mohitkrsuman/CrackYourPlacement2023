 int rec(int i, int rem, vector<int> &arr, int &k){
        if(i == arr.size()){
            return 0;
        }
        int ans ;
        
        if(dp[i][rem] != -1) return dp[i][rem];
        
        if(arr[i] > rem){
           ans = (rem + 1) * (rem + 1) + rec(i+1, k-arr[i]-1, arr, k);
        }else{
            // if no word is place previously
            int choice1 = rec(i+1, rem-arr[i]-1, arr, k);
            // if word is already placed
            int choice2 = (rem+1)*(rem+1) + rec(i+1, k-arr[i]-1, arr, k);
            ans = min(choice1, choice2);
        }
        dp[i][rem] = ans;
        return dp[i][rem];
    }
    
    
    int solveWordWrap(vector<int>nums, int k) 
    { 
        // Code here
        memset(dp, -1, sizeof(dp));
        
        return rec(0, k, nums, k);
        //   idx, remaining ,array ,remai
    } 
